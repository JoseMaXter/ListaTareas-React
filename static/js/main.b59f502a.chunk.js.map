{"version":3,"sources":["Componentes/Formulario.jsx","App.jsx","Componentes/Redux/reducers/ventas.js","Componentes/Redux/store/index.js","index.js"],"names":["Formulario","useState","secondary","useForm","handleSubmit","control","errors","formState","reset","tareas","setTareas","className","action","onSubmit","data","nombreTarea","descripcion","FormLabel","sx","display","flexDirection","error","type","Typography","variant","paddingBottom","name","rules","required","render","field","TextField","color","label","marginBottom","padding","Button","marginTop","endIcon","List","map","tarea","index","ListItem","secondaryAction","IconButton","onClick","nuevasTareas","filter","elimiarItem","ListItemIcon","ListItemText","App","stateInicial","valor","array","SUMAR","OBTENER_DATA","rootReducer","combineReducers","ventas","state","payload","Root","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b59f502a.chunk.js","sourcesContent":["import Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport AddTaskIcon from '@mui/icons-material/AddTask'\r\nimport AssignmentRoundedIcon from '@mui/icons-material/AssignmentRounded'\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff'\r\nimport Typography from '@mui/material/Typography'\r\nimport { List, ListItem, ListItemText, ListItemIcon, IconButton } from '@mui/material'\r\nimport { useState } from 'react'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nconst Formulario = () => {\r\n\r\n    const [secondary, setSecondary] = useState(true)\r\n    const { handleSubmit, control, formState: { errors }, reset } = useForm()\r\n    const [tareas, setTareas] = useState([])\r\n\r\n    const onSubmit = data => {\r\n        setTareas([...tareas, data])\r\n        reset({nombreTarea: ''})\r\n        reset({descripcion: ''})\r\n    }\r\n\r\n    const elimiarItem = (nombreTarea) => {\r\n        const nuevasTareas = tareas.filter(tarea => tarea.nombreTarea !== nombreTarea)\r\n        setTareas(nuevasTareas)\r\n    }\r\n\r\n    return ( \r\n        <article className=\"m-auto w-full md:w-9/12 lg:w-7/12 \">\r\n            <form action=\"#\" onSubmit={handleSubmit(onSubmit)}>\r\n                <h2 className=\"text-center text-xl font-bold m-4 bg-blue-600 text-white p-2\">Lista de tareas</h2>\r\n                <div className=\"flex flex-col p-4 \">\r\n                    <FormLabel sx={{display: 'flex', flexDirection: 'column'}} error={errors.nombreTarea?.type === 'required' ? true : false}>\r\n                        <Typography variant=\"subtitle1\" sx={{paddingBottom: '15px'}}>Nombre Tarea</Typography>\r\n                        <Controller\r\n                            name=\"nombreTarea\"\r\n                            control={control}\r\n                            rules={{ required: true }}\r\n                            render={({ field }) => <TextField color={errors.nombreTarea ? 'error' : 'primary'} label=\"Nombre de la tarea\" sx={{marginBottom: '1rem'}} {...field} />}\r\n                        />\r\n                    </FormLabel>\r\n         \r\n                    {errors.nombreTarea?.type === 'required' && <h4 className=\"p-3 text-lg text-white bg-red-600 rounded mb-4\">El campo de nombre es obligatorio</h4>}\r\n\r\n                    <FormLabel sx={{display: 'flex', flexDirection: 'column'}} error={errors.descripcion?.type === 'required' ? true : false}>\r\n                        <Typography variant=\"subtitle1\" sx={{padding: '15px 0'}}>Descripcion</Typography>\r\n                        <Controller\r\n                            name=\"descripcion\"\r\n                            control={control}\r\n                            rules={{ required: true }}\r\n                            render={({ field }) => <TextField color={errors.descripcion ? 'error' : 'primary'} label=\"Descripción\" {...field} />}\r\n                        />\r\n                    </FormLabel>\r\n\r\n                    {errors.descripcion?.type === 'required' && <h4 className=\"p-3 bg-red-600 text-lg text-white rounded mt-4\">El campo descripción es obligatorio</h4>}\r\n\r\n                    <Button variant=\"contained\" sx={{marginTop: '1rem'}} endIcon={<AddTaskIcon />} type=\"submit\">\r\n                        <Typography variant=\"subtitle1\" >\r\n                            Agregar\r\n                        </Typography>\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n            <List>\r\n                {\r\n                    tareas.map((tarea, index) => {\r\n                        return(\r\n                            <ListItem key={index} secondaryAction={\r\n                                <IconButton onClick={() => elimiarItem(tarea.nombreTarea)}>\r\n                                  <HighlightOffIcon color=\"info\"/>\r\n                                </IconButton>\r\n                              }>\r\n                                <ListItemIcon>\r\n                                    <AssignmentRoundedIcon color=\"info\"/>\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText secondary={secondary ? `${tarea.descripcion}` : null}>\r\n                                    {tarea.nombreTarea}\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n        </article>\r\n     )\r\n}\r\n \r\nexport default Formulario;","import Home from './Componentes/Home'\nimport Formulario from './Componentes/Formulario'\n\nconst App = () => {\n  return (\n     <Formulario />\n  )\n}\n\nexport default App\n","const stateInicial = {\r\n    valor:  0,\r\n    array: []\r\n}\r\n\r\nconst SUMAR = '@SUMAR'\r\nconst OBTENER_DATA = '@OBTENER_DATA'\r\n\r\nexport const ventasReducer = (state = stateInicial, action) => {\r\n    switch(action.type){\r\n        case OBTENER_DATA:\r\n            return {...state, array: action.payload}\r\n        case SUMAR:\r\n            return {...state, valor: state.valor + action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { ventasReducer } from '../reducers/ventas'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    ventas: ventasReducer\r\n})\r\n\r\nexport const generateStore = () => {\r\n    const store = createStore(rootReducer, composeWithDevTools( applyMiddleware( thunk ) ))\r\n    return store\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { generateStore } from './Componentes/Redux/store/index'\n\nconst Root = () => {\n\n  const store = generateStore()\n\n  return(\n    <Provider store={store} >\n      <App />\n    </Provider>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}